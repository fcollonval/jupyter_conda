# This is modified based on https://github.com/rmcgibbo/python-appveyor-conda-example
environment:
  # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
  # /E:ON and /V:ON options are not enabled in the batch script interpreter
  # See: http://stackoverflow.com/a/13751649/163740
  CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\.continuous-integration\\run_with_env.cmd"

  # Workaround for https://github.com/conda/conda-build/issues/636
  PYTHONIOENCODING: "UTF-8"
  
  PYTHONUNBUFFERED: 1
  PYTHONLEGACYWINDOWSSTDIO: 1

  matrix:
    - PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
    # - PYTHON_VERSION: "3.6"
    #  PYTHON_ARCH: "64"
    # - PYTHON_VERSION: "3.7"
    #  PYTHON_ARCH: "64"

# We always use a 64-bit machine, but can build x86 distributions
# with the PYTHON_ARCH variable (which is used by CMD_IN_ENV).
platform:
  - x64

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps:
      if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
      https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
      Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
      throw "There are newer queued builds for this pull request, failing early." }
  # Use the pre-installed Miniconda for the desired arch
  - IF %PYTHON_ARCH% EQU 86 (set MINICONDA=C:\Miniconda) ELSE (set MINICONDA=C:\Miniconda-x64)
  - mkdir C:\Users\appveyor\.conda
  - call %MINICONDA%\Scripts\conda.exe install conda --yes
  - call %MINICONDA%\Scripts\activate.bat
  - conda config --set always_yes yes --set changeps1 no --set safety_checks disabled
  - conda install -c defaults -c conda-forge "python=%PYTHON_VERSION%"
  - conda install -c defaults -c conda-forge --file requirements.txt
  - conda install -c defaults -c conda-forge --file requirements_dev.txt
  - npm install
  # The following will install and enable the extension
  - pip install .

# Skip .NET project specific build phase.
build: off

test_script:
  - npm run test
