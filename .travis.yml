language: shell

branches:
  only:
    - master

env:
  global:
    - NAME=test_jupyter_conda

matrix:
  include:
    - name: "Xenial Linux Python 3.6"
      env: PYTHON_VERSION=3.6 DEPS="typing"
      before_install:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        - bash miniconda.sh -b -p $HOME/miniconda
        - . $HOME/miniconda/etc/profile.d/conda.sh
        - conda activate
    - name: "Xenial Linux Python 3.7"
      env: PYTHON_VERSION=3.7 DEPS=""
      before_install:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        - bash miniconda.sh -b -p $HOME/miniconda
        - . $HOME/miniconda/etc/profile.d/conda.sh
        - conda activate        
    - name: "Windows Python 3.7"
      os: windows
      env: PYTHON_VERSION=3.7 DEPS=""
      before_install:
        - choco install miniconda3
        - . /c/tools/miniconda3/etc/profile.d/conda.sh
        - conda activate
    - name: "macOS Python 3.7"
      os: osx
      env: PYTHON_VERSION=3.7 DEPS=""
      before_install:
        - brew cask install miniconda
        - conda init "$(basename "${SHELL}")"       

install:
  - conda config --set always_yes yes --set changeps1 no
  - conda update conda
  - conda create -n $NAME -c conda-forge -c defaults python=$PYTHON_VERSION $DEPS
  - conda activate $NAME
  - conda info -a
  - conda install -n $NAME -c conda-forge -c defaults --file requirements_dev.txt
  - pip install python-coveralls
  - npm install
  # Install the server and notebook extensions
  - pip install .
  # Install the jupyterlab extension
  - cd labextension
  - conda install -n $NAME -c conda-forge -c defaults jupyterlab
  - jlpm install
  - jupyter labextension install jupyterlab_toastify --no-build
  - jupyter labextension install .
  - cd ..

script:
  - npm run test

after_success:
  - coveralls
